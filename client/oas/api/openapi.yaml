openapi: 3.0.1
info:
  title: bisq-openapi
  version: 2.1.0
servers:
- url: /
paths:
  /identities:
    post:
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: create 200 response
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /info:
    get:
      operationId: getInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
          description: getInfo 200 response
      tags:
      - Info
      x-accepts:
      - application/json
  /logging/categories:
    get:
      operationId: getLoggingCategories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoggingCategory'
                type: array
          description: getLoggingCategories 200 response
      tags:
      - Logging
      x-accepts:
      - application/json
    put:
      operationId: updateLoggingCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateLoggingCategory_request'
        required: true
      responses:
        "200":
          description: updateLoggingCategory 200 response
      tags:
      - Logging
      x-content-type: application/json
      x-accepts:
      - application/json
  /logging/categories/{name}:
    get:
      operationId: getLoggingCategory
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingCategory'
          description: getLoggingCategory 200 response
      tags:
      - Logging
      x-accepts:
      - application/json
  /trading/offerbook:
    get:
      operationId: getOffers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Offer'
                type: array
          description: getOffers 200 response
      tags:
      - Offerbook
      x-accepts:
      - application/json
    post:
      operationId: addOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addOffer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: addOffer 200 response
      tags:
      - Offerbook
      x-content-type: application/json
      x-accepts:
      - application/json
  /trading/offerbook/{offerId}:
    delete:
      operationId: removeOffer
      parameters:
      - explode: false
        in: path
        name: offerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
          description: removeOffer 200 response
      tags:
      - Offerbook
      x-accepts:
      - application/json
    get:
      operationId: getOffer
      parameters:
      - explode: false
        in: path
        name: offerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
          description: getOffer 200 response
      tags:
      - Offerbook
      x-accepts:
      - application/json
components:
  schemas:
    Identity:
      properties:
        nym:
          minLength: 1
          type: string
      required:
      - nym
      type: object
    Info:
      example:
        version: version
      properties:
        version:
          minLength: 1
          type: string
      required:
      - version
      type: object
    LoggingCategory:
      example:
        level: level
        name: name
      properties:
        name:
          minLength: 1
          type: string
        level:
          minLength: 1
          type: string
      required:
      - level
      - name
      type: object
    Offer:
      example:
        details: details
        id: id
      properties:
        id:
          type: string
        details:
          minLength: 1
          type: string
      required:
      - details
      - id
      type: object
    create_request:
      properties:
        identity:
          $ref: '#/components/schemas/Identity'
      type: object
    updateLoggingCategory_request:
      properties:
        loggingCategory:
          $ref: '#/components/schemas/LoggingCategory'
      type: object
    addOffer_request:
      properties:
        offer:
          $ref: '#/components/schemas/Offer'
      type: object

